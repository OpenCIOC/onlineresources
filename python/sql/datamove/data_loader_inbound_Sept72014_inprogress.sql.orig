DECLARE @MemberID int, @xmlData xml
SET @MemberID=500

DECLARE @LoadCode varchar(10), @ObjectType varchar(50)
SET @LoadCode='dp092014'

-- Member 1
IF 0=1 BEGIN

SET @ObjectType='Member'

SELECT @xmlData=Data FROM cioc_data_loader.dbo.MultiObjectLoader
WHERE ObjectType=@ObjectType AND LoadCode=@LoadCode

SET IDENTITY_INSERT dbo.STP_Member ON

INSERT INTO [OntarioCioc_2012_11].[dbo].[STP_Member]
           ([MemberID]
           ,[CREATED_DATE]
           ,[CREATED_BY]
           ,[MODIFIED_DATE]
           ,[MODIFIED_BY]
           ,[Active]
           ,[DatabaseCode]
           ,[DefaultLangID]
           ,[AllowPublicAccess]
           ,[DefaultTemplate]
           ,[DefaultPrintTemplate]
           ,[PrintModePublic]
           ,[TrainingMode]
           ,[UseInitials]
           ,[DaysSinceLastEmail]
           ,[DefaultEmailTech]
           ,[ClientTrackerIP]
           ,[ClientTrackerRpcURL]
           ,[DefaultGCType]
           ,[DefaultCountry]
           ,[NoEmail]
           ,[DownloadUncompressed]
           ,[UseCIC]
           ,[DefaultViewCIC]
           ,[BaseURLCIC]
           ,[DefaultEmailCIC]
           ,[SiteCodeLength]
           ,[UseTaxonomy]
           ,[VacancyFundedCapacity]
           ,[VacancyServiceHours]
           ,[VacancyServiceDays]
           ,[VacancyServiceWeeks]
           ,[VacancyServiceFTE]
           ,[CanDeleteRecordNoteCIC]
           ,[CanUpdateRecordNoteCIC]
           ,[RecordNoteTypeOptionalCIC]
           ,[PreventDuplicateOrgNames]
           ,[UseLowestNUM]
           ,[UseOfflineTools]
           ,[UseVOL]
           ,[DefaultViewVOL]
           ,[BaseURLVOL]
           ,[DefaultEmailVOL]
           ,[UseVolunteerProfiles]
           ,[LastVolProfileEmailDate]
           ,[DefaultEmailVOLProfile]
           ,[CanDeleteRecordNoteVOL]
           ,[CanUpdateRecordNoteVOL]
           ,[RecordNoteTypeOptionalVOL]
           ,[DownloadPasswordCIC]
           ,[DownloadPasswordVOL]
           ,[OnlySpecificInterests]
           ,[LoginRetryLimit]
           ,[DefaultProvince])
SELECT
	N.value('MemberID[1]', 'int'),
	N.value('CREATED_DATE[1]', 'smalldatetime'),
	N.value('CREATED_BY[1]', 'varchar(50)'),
	N.value('MODIFIED_DATE[1]', 'smalldatetime'),
	N.value('MODIFIED_BY[1]', 'varchar(50)'),
	N.value('Active[1]', 'bit'),
	N.value('DatabaseCode[1]', 'varchar(15)'),
	N.value('DefaultLangID[1]', 'smallint'),
	N.value('AllowPublicAccess[1]', 'bit'),
	(SELECT Template_ID FROM dbo.GBL_Template WHERE SystemTemplate=1),
	(SELECT Template_ID FROM dbo.GBL_Template WHERE SystemTemplate=1),
	N.value('PrintModePublic[1]', 'bit'),
	N.value('TrainingMode[1]', 'bit'),
	N.value('UseInitials[1]', 'bit'),
	N.value('DaysSinceLastEmail[1]', 'smallint'),
	N.value('DefaultEmailTech[1]', 'varchar(60)'),
	N.value('ClientTrackerIP[1]', 'varchar(500)'),
	N.value('ClientTrackerRpcURL[1]', 'varchar(200)'),
	N.value('DefaultGCType[1]', 'tinyint'),
	N.value('DefaultCountry[1]', 'nvarchar(60)'),
	N.value('NoEmail[1]', 'bit'),
	N.value('DownloadUncompressed[1]', 'bit'),
	N.value('UseCIC[1]', 'bit'),
	NULL,
	N.value('BaseURLCIC[1]', 'varchar(100)'),
	N.value('DefaultEmailCIC[1]', 'varchar(60)'),
	N.value('SiteCodeLength[1]', 'tinyint'),
	N.value('UseTaxonomy[1]', 'bit'),
	N.value('VacancyFundedCapacity[1]', 'bit'),
	N.value('VacancyServiceHours[1]', 'bit'),
	N.value('VacancyServiceDays[1]', 'bit'),
	N.value('VacancyServiceWeeks[1]', 'bit'),
	N.value('VacancyServiceFTE[1]', 'bit'),
	N.value('CanDeleteRecordNoteCIC[1]', 'tinyint'),
	N.value('CanUpdateRecordNoteCIC[1]', 'tinyint'),
	N.value('RecordNoteTypeOptionalCIC[1]', 'bit'),
	N.value('PreventDuplicateOrgNames[1]', 'tinyint'),
	N.value('UseLowestNUM[1]', 'bit'),
	N.value('UseOfflineTools[1]', 'bit'),
	N.value('UseVOL[1]', 'bit'),
	NULL,
	N.value('BaseURLVOL[1]', 'varchar(100)'),
	N.value('DefaultEmailVOL[1]', 'varchar(60)'),
	N.value('UseVolunteerProfiles[1]', 'bit'),
	N.value('LastVolProfileEmailDate[1]', 'smalldatetime'),
	N.value('DefaultEmailVOLProfile[1]', 'varchar(60)'),
	N.value('CanDeleteRecordNoteVOL[1]', 'tinyint'),
	N.value('CanUpdateRecordNoteVOL[1]', 'tinyint'),
	N.value('RecordNoteTypeOptionalVOL[1]', 'bit'),
	N.value('DownloadPasswordCIC[1]', 'nvarchar(20)'),
	N.value('DownloadPasswordVOL[1]', 'nvarchar(20)'),
	N.value('OnlySpecificInterests[1]', 'bit'),
	N.value('LoginRetryLimit[1]', 'tinyint'),
	N.value('DefaultProvince[1]', 'varchar(2)')
FROM @xmlData.nodes('//Member') as T(N)
	WHERE NOT EXISTS(SELECT * FROM dbo.STP_Member WHERE MemberID=@MemberID)

SET IDENTITY_INSERT dbo.STP_Member OFF

INSERT INTO dbo.STP_Member_Description
        ( MemberID ,
          LangID ,
          CREATED_DATE ,
          CREATED_BY ,
          MODIFIED_DATE ,
          MODIFIED_BY ,
          DatabaseNameCIC ,
          MemberName ,
          MemberNameCIC ,
          FeedbackMsgCIC ,
          DatabaseNameVOL ,
          MemberNameVOL ,
          FeedbackMsgVOL ,
          VolProfilePrivacyPolicy ,
          VolProfilePrivacyPolicyOrgName
        )
SELECT @MemberID,
		N.value('LangID[1]', 'smallint'),
		N.value('CREATED_DATE[1]', 'smalldatetime'),
		N.value('CREATED_BY[1]', 'varchar(50)'),
		N.value('MODIFIED_DATE[1]', 'smalldatetime'),
		N.value('MODIFIED_BY[1]', 'varchar(50)'),
		N.value('DatabaseNameCIC[1]', 'nvarchar(255)'),
		N.value('MemberName[1]', 'nvarchar(255)'),
		N.value('MemberNameCIC[1]', 'nvarchar(255)'),
		N.value('FeedbackMsgCIC[1]', 'nvarchar(max)'),
		N.value('DatabaseNameVOL[1]', 'nvarchar(255)'),
		N.value('MemberNameVOL[1]', 'nvarchar(255)'),
		N.value('FeedbackMsgVOL[1]', 'nvarchar(max)'),
		N.value('VolProfilePrivacyPolicy[1]', 'nvarchar(max)'),
        N.value('VolProfilePrivacyPolicyOrgName[1]', 'nvarchar(255)')
FROM @xmlData.nodes('//Member/Descriptions/Lang') as T(N)
	WHERE NOT EXISTS(SELECT * FROM dbo.STP_Member_Description WHERE MemberID=@MemberID AND LangID=N.value('LangID[1]', 'smallint'))

END

-- Layout
IF 0=1 BEGIN

SET @ObjectType='Layout'

SELECT @xmlData=Data FROM cioc_data_loader.dbo.MultiObjectLoader
WHERE ObjectType=@ObjectType AND LoadCode=@LoadCode

DECLARE @LayoutID int, @NewLayoutID int

DECLARE LayoutCursor CURSOR LOCAL FOR
SELECT
	N.value('LayoutID[1]', 'int')
FROM @xmlData.nodes('//Layout') as T(N)

OPEN LayoutCursor

FETCH NEXT FROM LayoutCursor INTO @LayoutID

WHILE @@FETCH_STATUS = 0 BEGIN

	INSERT INTO dbo.GBL_Template_Layout
	        ( CREATED_DATE ,
	          CREATED_BY ,
	          MODIFIED_DATE ,
	          MODIFIED_BY ,
	          MemberID ,
	          SystemLayout ,
	          Owner ,
	          LayoutType ,
	          DefaultSearchLayout ,
	          LayoutCSS ,
	          LayoutCSSURL ,
	          LayoutCSSVersionDate ,
	          AlmostStandardsMode
	        )
	SELECT
		N.value('CREATED_DATE[1]', 'smalldatetime'),
		N.value('CREATED_BY[1]', 'varchar(50)'),
		N.value('MODIFIED_DATE[1]', 'smalldatetime'),
		N.value('MODIFIED_BY[1]', 'varchar(50)'),
		N.value('MemberID[1]', 'int'),
		0,
		N.value('Owner[1]', 'char(3)'),
		N.value('LayoutType[1]', 'varchar(10)'),
		N.value('DefaultSearchLayout[1]', 'bit'),
		N.value('LayoutCSS[1]', 'varchar(max)'),
		N.value('LayoutCSSURL[1]', 'varchar(200)'),
		N.value('LayoutCSSVersionDate[1]', 'datetime'),
		N.value('AlmostStandardsMode[1]', 'bit')
	FROM @xmlData.nodes('//Layout') AS T(N)
	WHERE N.value('LayoutID[1]', 'int')=@LayoutID
		AND NOT EXISTS(SELECT * FROM dbo.GBL_Template_Layout tl
			INNER JOIN dbo.GBL_Template_Layout_Description tld ON tld.LayoutID = tl.LayoutID
			WHERE MemberID=@MemberID AND tld.LayoutName=N.value('LayoutName[1]', 'nvarchar(255)'))
	
	IF @@ROWCOUNT > 0 BEGIN
		SET @NewLayoutID=SCOPE_IDENTITY()
	END ELSE BEGIN
		SELECT @NewLayoutID=NULL
	END
	
	IF @NewLayoutID IS NOT NULL BEGIN
		INSERT INTO dbo.GBL_Template_Layout_Description
		        ( LayoutID ,
		          LangID ,
		          CREATED_DATE ,
		          CREATED_BY ,
		          MODIFIED_DATE ,
		          MODIFIED_BY ,
		          LayoutName ,
		          LayoutHTML ,
		          LayoutHTMLURL
		        )
		SELECT
				@NewLayoutID,
				N.value('LangID[1]', 'smallint'),
				N.value('CREATED_DATE[1]', 'smalldatetime'),
				N.value('CREATED_BY[1]', 'varchar(50)'),
				N.value('MODIFIED_DATE[1]', 'smalldatetime'),
				N.value('MODIFIED_BY[1]', 'varchar(50)'),
				N.value('LayoutName[1]', 'nvarchar(150)'),
				N.value('LayoutHTML[1]', 'nvarchar(max)'),
				N.value('LayoutHTMLURL[1]', 'varchar(200)')
		FROM @xmlData.nodes('//Layout/Descriptions/Lang') AS T(N)
			WHERE N.value('LayoutID[1]', 'int')=@LayoutID
	
	END

	FETCH NEXT FROM LayoutCursor INTO @LayoutID
END

DEALLOCATE LayoutCursor

END

-- Template

IF 0=1 BEGIN

SET @ObjectType='Template'

SELECT @xmlData=Data FROM cioc_data_loader.dbo.MultiObjectLoader
WHERE ObjectType=@ObjectType AND LoadCode=@LoadCode

DECLARE @TemplateID int, @NewTemplateID int

DECLARE TemplateCursor CURSOR LOCAL FOR
SELECT
	N.value('Template_ID[1]', 'int')
FROM @xmlData.nodes('//Template') as T(N)

OPEN TemplateCursor

FETCH NEXT FROM TemplateCursor INTO @TemplateID

WHILE @@FETCH_STATUS = 0 BEGIN

INSERT INTO dbo.GBL_Template
        ( CREATED_DATE ,
          CREATED_BY ,
          MODIFIED_DATE ,
          MODIFIED_BY ,
          MemberID ,
          SystemTemplate ,
          Owner ,
          StyleSheetUrl ,
          JavaScriptTopUrl ,
          JavaScriptBottomUrl ,
          ShortCutIcon ,
          AppleTouchIcon ,
          BodyTagExtras ,
          Background ,
          BackgroundColour ,
          FontFamily ,
          FontColour ,
          FieldLabelColour ,
          MenuFontColour ,
          MenuBgColour ,
          TitleFontColour ,
          TitleBgColour ,
          LinkColour ,
          ALinkColour ,
          VLinkColour ,
          AlertColour ,
          HeaderLayout ,
          FooterLayout ,
          SearchLayoutCIC ,
          SearchLayoutVOL ,
          fcContent ,
          bgColorContent ,
          borderColorContent ,
          iconColorContent ,
          fcHeader ,
          bgColorHeader ,
          borderColorHeader ,
          iconColorHeader ,
          fcDefault ,
          bgColorDefault ,
          borderColorDefault ,
          iconColorDefault ,
          fcHover ,
          bgColorHover ,
          borderColorHover ,
          iconColorHover ,
          fcActive ,
          bgColorActive ,
          borderColorActive ,
          iconColorActive ,
          fcHighlight ,
          bgColorHighlight ,
          borderColorHighlight ,
          iconColorHighlight ,
          fcError ,
          bgColorError ,
          borderColorError ,
          iconColorError ,
          cornerRadius ,
          fsDefault ,
          TemplateCSSVersionDate ,
          TemplateCSSLayoutURLs ,
          AlmostStandardsMode
        )
	SELECT
		N.value('CREATED_DATE[1]', 'smalldatetime'),
		N.value('CREATED_BY[1]', 'varchar(50)'),
		N.value('MODIFIED_DATE[1]', 'smalldatetime'),
		N.value('MODIFIED_BY[1]', 'varchar(50)'),
		N.value('MemberID[1]', 'int'),
		N.value('SystemTemplate[1]', 'bit'),
		N.value('Owner[1]', 'char(3)'),
		N.value('StyleSheetUrl[1]', 'varchar(150)'),
		N.value('JavaScriptTopUrl[1]', 'varchar(150)'),
		N.value('JavaScriptBottomUrl[1]', 'varchar(150)'),
		N.value('ShortCutIcon[1]', 'varchar(150)'),
		N.value('AppleTouchIcon[1]', 'varchar(150)'),
		N.value('BodyTagExtras[1]', 'varchar(150)'),
		N.value('Background[1]', 'varchar(150)'),
		N.value('BackgroundColour[1]', 'varchar(7)'),
		N.value('FontFamily[1]', 'varchar(100)'),
		N.value('FontColour[1]', 'varchar(7)'),
		N.value('FieldLabelColour[1]', 'varchar(7)'),
		N.value('MenuFontColour[1]', 'varchar(7)'),
		N.value('MenuBgColour[1]', 'varchar(7)'),
		N.value('TitleFontColour[1]', 'varchar(7)'),
		N.value('TitleBgColour[1]', 'varchar(7)'),
		N.value('LinkColour[1]', 'varchar(7)'),
		N.value('ALinkColour[1]', 'varchar(7)'),
		N.value('VLinkColour[1]', 'varchar(7)'),
		N.value('AlertColour[1]', 'varchar(7)'),
		(SELECT TOP 1 tl.LayoutID FROM dbo.GBL_Template_Layout tl INNER JOIN dbo.GBL_Template_Layout_Description tld ON tld.LayoutID = tl.LayoutID AND (tl.MemberID=@MemberID OR tl.MemberID IS NULL) WHERE tld.LayoutName=N.value('HeaderLayoutName[1]', 'nvarchar(255)')),
		(SELECT TOP 1 tl.LayoutID FROM dbo.GBL_Template_Layout tl INNER JOIN dbo.GBL_Template_Layout_Description tld ON tld.LayoutID = tl.LayoutID AND (tl.MemberID=@MemberID OR tl.MemberID IS NULL) WHERE tld.LayoutName=N.value('FooterLayoutName[1]', 'nvarchar(255)')),
		(SELECT TOP 1 tl.LayoutID FROM dbo.GBL_Template_Layout tl INNER JOIN dbo.GBL_Template_Layout_Description tld ON tld.LayoutID = tl.LayoutID AND (tl.MemberID=@MemberID OR tl.MemberID IS NULL) WHERE tld.LayoutName=N.value('SearchLayoutCICName[1]', 'nvarchar(255)')),
		(SELECT TOP 1 tl.LayoutID FROM dbo.GBL_Template_Layout tl INNER JOIN dbo.GBL_Template_Layout_Description tld ON tld.LayoutID = tl.LayoutID AND (tl.MemberID=@MemberID OR tl.MemberID IS NULL) WHERE tld.LayoutName=N.value('SearchLayoutVOLName[1]', 'nvarchar(255)')),
		N.value('fcContent[1]', 'varchar(7)'),
		N.value('bgColorContent[1]', 'varchar(7)'),
		N.value('borderColorContent[1]', 'varchar(7)'),
		N.value('iconColorContent[1]', 'varchar(7)'),
		N.value('fcHeader[1]', 'varchar(7)'),
		N.value('bgColorHeader[1]', 'varchar(7)'),
		N.value('borderColorHeader[1]', 'varchar(7)'),
		N.value('iconColorHeader[1]', 'varchar(7)'),
		N.value('fcDefault[1]', 'varchar(7)'),
		N.value('bgColorDefault[1]', 'varchar(7)'),
		N.value('borderColorDefault[1]', 'varchar(7)'),
		N.value('iconColorDefault[1]', 'varchar(7)'),
		N.value('fcHover [1]', 'varchar(7)'),
		N.value('bgColorHover[1]', 'varchar(7)'),
		N.value('borderColorHover[1]', 'varchar(7)'),
		N.value('iconColorHover[1]', 'varchar(7)'),
		N.value('fcActive[1]', 'varchar(7)'),
		N.value('bgColorActive[1]', 'varchar(7)'),
		N.value('borderColorActive[1]', 'varchar(7)'),
		N.value('iconColorActive[1]', 'varchar(7)'),
		N.value('fcHighlight[1]', 'varchar(7)'),
		N.value('bgColorHighlight[1]', 'varchar(7)'),
		N.value('borderColorHighlight[1]', 'varchar(7)'),
		N.value('iconColorHighlight[1]', 'varchar(7)'),
		N.value('fcError [1]', 'varchar(7)'),
		N.value('bgColorError[1]', 'varchar(7)'),
		N.value('borderColorError[1]', 'varchar(7)'),
		N.value('iconColorError[1]', 'varchar(7)'),
		N.value('cornerRadius[1]', 'varchar(10)'),
		N.value('fsDefault[1]', 'varchar(10)'),
		N.value('TemplateCSSVersionDate[1]', 'datetime'),
		N.value('TemplateCSSLayoutURLs[1]', 'varchar(max)'),
		N.value('AlmostStandardsMode[1]', 'bit')
	FROM @xmlData.nodes('//Template') as T(N)
	WHERE N.value('Template_ID[1]', 'int')=@TemplateID
		AND NOT EXISTS(SELECT * FROM dbo.GBL_Template t
			INNER JOIN dbo.GBL_Template_Description td ON t.Template_ID=td.Template_ID
			WHERE MemberID=@MemberID AND td.Name=N.value('TemplateName[1]', 'nvarchar(255)'))
	
	IF @@ROWCOUNT > 0 BEGIN
		SET @NewTemplateID=SCOPE_IDENTITY()
	END ELSE BEGIN
		SELECT @NewTemplateID=NULL
	END
	
	IF @NewTemplateID IS NOT NULL BEGIN
		INSERT INTO dbo.GBL_Template_Description
		        ( Template_ID ,
		          LangID ,
		          CREATED_DATE ,
		          CREATED_BY ,
		          MODIFIED_DATE ,
		          MODIFIED_BY ,
		          Name ,
		          Logo ,
		          LogoLink ,
		          CopyrightNotice
		        )
		SELECT
				@NewTemplateID,
				N.value('LangID[1]', 'smallint'),
				N.value('CREATED_DATE[1]', 'smalldatetime'),
				N.value('CREATED_BY[1]', 'varchar(50)'),
				N.value('MODIFIED_DATE[1]', 'smalldatetime'),
				N.value('MODIFIED_BY[1]', 'varchar(50)'),
				N.value('Name[1]', 'nvarchar(150)'),
				N.value('Logo[1]', 'nvarchar(150)'),
				N.value('LogoLink[1]', 'varchar(150)'),
				N.value('CopyrightNotice[1]', 'nvarchar(255)')
		FROM @xmlData.nodes('//Template/Descriptions/Lang') AS T(N)
			WHERE N.value('Template_ID[1]', 'int')=@TemplateID
	
		INSERT INTO dbo.GBL_Template_Menu
		        ( Template_ID ,
		          LangID ,
		          CREATED_DATE ,
		          CREATED_BY ,
		          MODIFIED_DATE ,
		          MODIFIED_BY ,
		          MenuType ,
		          Display ,
		          Link ,
		          DisplayOrder
		        )
		SELECT
				@NewTemplateID,
				N.value('LangID[1]', 'smallint'),
				N.value('CREATED_DATE[1]', 'smalldatetime'),
				N.value('CREATED_BY[1]', 'varchar(50)'),
				N.value('MODIFIED_DATE[1]', 'smalldatetime'),
				N.value('MODIFIED_BY[1]', 'varchar(50)'),
		        N.value('MenuType[1]', 'varchar(10)'),
		        N.value('Display[1]', 'nvarchar(200)'),
		        N.value('Link[1]', 'varchar(150)'),
		        N.value('DisplayOrder[1]', 'tinyint')
		FROM @xmlData.nodes('//Template/MenuItems/MenuLang') AS T(N)
			WHERE N.value('Template_ID[1]', 'int')=@TemplateID
	END

	FETCH NEXT FROM TemplateCursor INTO @TemplateID
END

DEALLOCATE TemplateCursor

END

-- Publications

IF 0=1 BEGIN

SET @ObjectType='Publication'

SELECT @xmlData=Data FROM cioc_data_loader.dbo.MultiObjectLoader
WHERE ObjectType=@ObjectType AND LoadCode=@LoadCode

INSERT INTO dbo.CIC_Publication
        ( MODIFIED_DATE ,
          MODIFIED_BY ,
          CREATED_DATE ,
          CREATED_BY ,
          MemberID ,
          Owner ,
          PubCode ,
          NonPublic ,
          DisplayOrder ,
          FieldHeadings ,
          FieldHeadingsNP ,
          FieldDesc ,
          FieldHeadingGroups ,
          FieldHeadingGroupsNP
        )
SELECT
		N.value('MODIFIED_DATE[1]', 'smalldatetime'),
		N.value('MODIFIED_BY[1]', 'varchar(50)'),
		N.value('CREATED_DATE[1]', 'smalldatetime'),
		N.value('CREATED_BY[1]', 'varchar(50)'),
		N.value('MemberID[1]', 'int'),
		N.value('Owner[1]', 'char(3)'),
		N.value('PubCode[1]', 'varchar(20)'),
		N.value('NonPublic[1]', 'bit'),
		N.value('DisplayOrder[1]', 'tinyint'),
		N.value('FieldHeadings[1]', 'bit'),
		N.value('FieldHeadingsNP[1]', 'bit'),
		N.value('FieldDesc[1]', 'bit'),
		N.value('FieldHeadingGroups[1]', 'bit'),
        N.value('FieldHeadingGroupsNP[1]', 'bit')
FROM @xmlData.nodes('//Pub') AS T(N)
	WHERE NOT EXISTS(SELECT * FROM dbo.CIC_Publication WHERE PubCode=N.value('PubCode[1]', 'varchar(20)'))

INSERT INTO dbo.CIC_Publication_Name
        ( PB_ID, LangID, Name, Notes )
SELECT
		PB_ID,
		N.value('LangID[1]', 'smallint'),
		N.value('Name[1]', 'nvarchar(100)'),
		N.value('Notes[1]', 'nvarchar(max)')
FROM @xmlData.nodes('//Pub/Descriptions/Lang') AS T(N)
INNER JOIN dbo.CIC_Publication pb ON pb.PubCode=N.value('../../PubCode[1]', 'varchar(20)')
	WHERE NOT EXISTS(SELECT * FROM dbo.CIC_Publication_Name WHERE PB_ID=pb.PB_ID AND LangID=N.value('LangID[1]', 'smallint'))

END

IF 0=1 BEGIN

-- CIC View

SET @ObjectType='CIC View'

SELECT @xmlData=Data FROM cioc_data_loader.dbo.MultiObjectLoader
WHERE ObjectType=@ObjectType AND LoadCode=@LoadCode

DECLARE @ViewType int, @ViewName nvarchar(255), @NewViewType int

DECLARE ViewCursor CURSOR LOCAL FOR
SELECT
	N.value('ViewType[1]', 'int'),
	N.value('Descriptions[1]/Lang[LangID=0][1]/ViewName[1]', 'nvarchar(255)')
FROM @xmlData.nodes('//View') as T(N)

OPEN ViewCursor

FETCH NEXT FROM ViewCursor INTO @ViewType, @ViewName

WHILE @@FETCH_STATUS = 0 BEGIN

PRINT @ViewName

INSERT INTO dbo.CIC_View
        ( CREATED_DATE ,
          CREATED_BY ,
          MODIFIED_DATE ,
          MODIFIED_BY ,
          MemberID ,
          CanSeeNonPublic ,
          CanSeeDeleted ,
          HidePastDueBy ,
          AlertColumn ,
          Template ,
          PrintTemplate ,
          PrintVersionResults ,
          DataMgmtFields ,
          LastModifiedDate ,
          SocialMediaShare ,
          CommSrchWrapAt ,
          OtherCommunity ,
          RespectPrivacyProfile ,
          PB_ID ,
          LimitedView ,
          VolunteerLink ,
          SrchCommunityDefault ,
          ASrchAddress ,
          ASrchAges ,
          ASrchBool ,
          ASrchDist ,
          ASrchEmail ,
          ASrchEmployee ,
          ASrchLastRequest ,
          ASrchNear ,
          ASrchOwner ,
          ASrchVacancy ,
          ASrchVOL ,
          BSrchAutoComplete ,
          BSrchAges ,
          BSrchBrowseByOrg ,
          BSrchNUM ,
          BSrchOCG ,
          BSrchKeywords ,
          BSrchVacancy ,
          BSrchVOL ,
          BSrchWWW ,
          CSrch ,
          CSrchBusRoute ,
          CSrchKeywords ,
          CSrchNear ,
          CSrchSchoolEscort ,
          CSrchSchoolsInArea ,
          CSrchSpaceAvailable ,
          CSrchSubsidy ,
          CSrchTypeOfProgram ,
          CCRFields ,
          QuickListDropDown ,
          QuickListWrapAt ,
          QuickListMatchAll ,
          QuickListSearchGroups ,
          LinkOrgLevels ,
          CanSeeNonPublicPub ,
          UsePubNamesOnly ,
          UseNAICSView ,
          UseTaxonomyView ,
          TaxDefnLevel ,
          UseThesaurusView ,
          UseLocalSubjects ,
          UseZeroSubjects ,
          CCACMETA ,
          AlsoNotify ,
          NoProcessNotify ,
          UseSubmitChangesTo ,
          DataUseAuth ,
          MapSearchResults ,
          Owner ,
          MyList ,
          ViewOtherLangs ,
          AllowFeedbackNotInView ,
          AssignSuggestionsTo
        )
SELECT 
		N.value('CREATED_DATE[1]', 'smalldatetime'),
		N.value('CREATED_BY[1]', 'varchar(50)'),
		N.value('MODIFIED_DATE[1]', 'smalldatetime'),
		N.value('MODIFIED_BY[1]', 'varchar(50)'),
		N.value('MemberID[1]', 'int'),
		N.value('CanSeeNonPublic[1]', 'bit'),
		N.value('CanSeeDeleted[1]', 'bit'),
		N.value('HidePastDueBy[1]', 'int'),
		N.value('AlertColumn[1]', 'bit'),
		(SELECT TOP 1 t.Template_ID FROM dbo.GBL_Template t INNER JOIN dbo.GBL_Template_Description td ON td.Template_ID = t.Template_ID AND (t.MemberID=@MemberID OR t.MemberID IS NULL) WHERE td.Name=N.value('TemplateName[1]', 'nvarchar(255)')),
		(SELECT TOP 1 t.Template_ID FROM dbo.GBL_Template t INNER JOIN dbo.GBL_Template_Description td ON td.Template_ID = t.Template_ID AND (t.MemberID=@MemberID OR t.MemberID IS NULL) WHERE td.Name=N.value('PrintTemplateName[1]', 'nvarchar(255)')),
		N.value('PrintVersionResults[1]', 'bit'),
		N.value('DataMgmtFields[1]', 'bit'),
		N.value('LastModifiedDate[1]', 'bit'),
		N.value('SocialMediaShare[1]', 'bit'),
		N.value('CommSrchWrapAt[1]', 'tinyint'),
		N.value('OtherCommunity[1]', 'bit'),
		N.value('RespectPrivacyProfile[1]', 'bit'),
		(SELECT PB_ID FROM dbo.CIC_Publication WHERE PubCode=N.value('PubCode[1]', 'varchar(20)')),
		N.value('LimitedView[1]', 'bit'),
		N.value('VolunteerLink[1]', 'bit'),
		N.value('SrchCommunityDefault[1]', 'bit'),
		N.value('ASrchAddress[1]', 'bit'),
		N.value('ASrchAges[1]', 'bit'),
		N.value('ASrchBool[1]', 'bit'),
		N.value('ASrchDist[1]', 'bit'),
		N.value('ASrchEmail[1]', 'bit'),
		N.value('ASrchEmployee[1]', 'bit'),
		N.value('ASrchLastRequest[1]', 'bit'),
		N.value('ASrchNear[1]', 'bit'),
		N.value('ASrchOwner[1]', 'bit'),
		N.value('ASrchVacancy[1]', 'bit'),
		N.value('ASrchVOL[1]', 'bit'),
		N.value('BSrchAutoComplete[1]', 'bit'),
		N.value('BSrchAges[1]', 'bit'),
		N.value('BSrchBrowseByOrg[1]', 'bit'),
		N.value('BSrchNUM[1]', 'bit'),
		N.value('BSrchOCG[1]', 'bit'),
		N.value('BSrchKeywords[1]', 'bit'),
		N.value('BSrchVacancy[1]', 'bit'),
		N.value('BSrchVOL[1]', 'bit'),
		N.value('BSrchWWW[1]', 'bit'),
		N.value('CSrch[1]', 'bit'),
		N.value('CSrchBusRoute[1]', 'bit'),
		N.value('CSrchKeywords[1]', 'bit'),
		N.value('CSrchNear[1]', 'bit'),
		N.value('CSrchSchoolEscort[1]', 'bit'),
		N.value('CSrchSchoolsInArea[1]', 'bit'),
		N.value('CSrchSpaceAvailable[1]', 'bit'),
		N.value('CSrchSubsidy[1]', 'bit'),
		N.value('CSrchTypeOfProgram[1]', 'bit'),
		N.value('CCRFields[1]', 'bit'),
		N.value('QuickListDropDown[1]', 'tinyint'),
		N.value('QuickListWrapAt[1]', 'int'),
		N.value('QuickListMatchAll[1]', 'bit'),
		N.value('QuickListSearchGroups[1]', 'bit'),
		N.value('LinkOrgLevels[1]', 'bit'),
		N.value('CanSeeNonPublicPub[1]', 'bit'),
		N.value('UsePubNamesOnly[1]', 'bit'),
		N.value('UseNAICSView[1]', 'bit'),
		N.value('UseTaxonomyView[1]', 'bit'),
		N.value('TaxDefnLevel[1]', 'int'),
		N.value('UseThesaurusView[1]', 'bit'),
		N.value('UseLocalSubjects[1]', 'bit'),
		N.value('UseZeroSubjects[1]', 'bit'),
		N.value('CCACMETA[1]', 'bit'),
		N.value('AlsoNotify[1]', 'varchar(60)'),
		N.value('NoProcessNotify[1]', 'bit'),
		N.value('UseSubmitChangesTo[1]', 'bit'),
		N.value('DataUseAuth[1]', 'bit'),
		N.value('MapSearchResults[1]', 'bit'),
		N.value('Owner[1]', 'char(3)'),
		N.value('MyList[1]', 'bit'),
		N.value('ViewOtherLangs[1]', 'bit'),
		N.value('AllowFeedbackNotInView[1]', 'bit'),
        N.value('AssignSuggestionsTo[1]', 'char(3)')
		FROM @xmlData.nodes('//View') AS T(N)
			WHERE N.value('ViewType[1]', 'int')=@ViewType
				AND NOT EXISTS(SELECT * FROM dbo.CIC_View vw INNER JOIN dbo.CIC_View_Description vwd ON vwd.ViewType = vw.ViewType AND vw.MemberID=@MemberID AND vwd.ViewName=@ViewName)

	IF @@ROWCOUNT > 0 BEGIN
		SET @NewViewType=SCOPE_IDENTITY()
	END ELSE BEGIN 
		SELECT @NewViewType=NULL
	END
	
	IF @NewViewType IS NOT NULL BEGIN
		INSERT INTO dbo.CIC_View_Description
				( ViewType ,
				  LangID ,
				  CREATED_DATE ,
				  CREATED_BY ,
				  MODIFIED_DATE ,
				  MODIFIED_BY ,
				  ViewName ,
				  Notes ,
				  Title ,
				  BottomMessage ,
				  MenuMessage ,
				  CSrchText ,
				  QuickListName ,
				  FeedbackBlurb ,
				  TermsOfUseURL ,
				  InclusionPolicy ,
				  SearchTips ,
				  SearchLeftMessage ,
				  SearchRightMessage ,
				  SearchAlertMessage
				)
		SELECT
			@NewViewType,
			N.value('LangID[1]', 'smallint'),
			N.value('CREATED_DATE[1]', 'smalldatetime'),
			N.value('CREATED_BY[1]', 'varchar(50)'),
			N.value('MODIFIED_DATE[1]', 'smalldatetime'),
			N.value('MODIFIED_BY[1]', 'varchar(50)'),
			N.value('ViewName[1]', 'nvarchar(100)'),
			N.value('Notes[1]', 'nvarchar(max)'),
			N.value('Title[1]', 'nvarchar(255)'),
			N.value('BottomMessage[1]', 'nvarchar(max)'),
			N.value('MenuMessage[1]', 'nvarchar(max)'),
			N.value('CSrchText[1]', 'nvarchar(255)'),
			N.value('QuickListName[1]', 'nvarchar(25)'),
			N.value('FeedbackBlurb[1]', 'nvarchar(max)'),
			N.value('TermsOfUseURL[1]', 'varchar(200)'),
			(SELECT InclusionPolicyID FROM dbo.GBL_InclusionPolicy WHERE PolicyTitle=N.value('InclusionPolicyName[1]', 'nvarchar(255)')),
			(SELECT SearchTipsID FROM dbo.GBL_SearchTips WHERE PageTitle=N.value('SearchTipsName[1]', 'nvarchar(255)')),
			N.value('SearchLeftMessage[1]', 'nvarchar(max)'),
			N.value('SearchRightMessage[1]', 'nvarchar(max)'),
			N.value('SearchAlertMessage[1]', 'nvarchar(max)')
		FROM @xmlData.nodes('//View/Descriptions/Lang') AS T(N)
			WHERE N.value('../../ViewType[1]', 'int')=@ViewType
				AND NOT EXISTS(SELECT * FROM dbo.CIC_View_Description WHERE ViewType=@NewViewType AND LangID=N.value('LangID[1]', 'smallint'))
	END

	FETCH NEXT FROM ViewCursor INTO @ViewType, @ViewName
END

DEALLOCATE ViewCursor


INSERT INTO dbo.CIC_View_ChkField
        ( ViewType, FieldID )
SELECT vwd.ViewType,
      (SELECT FieldID FROM dbo.GBL_FieldOption WHERE FieldName=N.value('.[1]', 'varchar(100)'))
FROM @xmlData.nodes('//View/ChkField/FieldName') AS T(N)
	INNER JOIN dbo.CIC_View_Description vwd
		ON vwd.LangID=(SELECT TOP 1 LangID FROM	dbo.CIC_View_Description WHERE ViewType=vwd.ViewType ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND vwd.ViewName=N.value('../../Descriptions[1]/Lang[LangID=0][1]/ViewName[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM dbo.CIC_View vw WHERE vw.MemberID=@MemberID AND vw.ViewType=vwd.ViewType)
	WHERE NOT EXISTS(SELECT * FROM dbo.CIC_View_ChkField WHERE ViewType=vwd.ViewType AND FieldID=(SELECT FieldID FROM dbo.GBL_FieldOption WHERE FieldName=N.value('.[1]', 'varchar(100)')))

	
INSERT INTO dbo.CIC_View_AutoAddPub
        ( ViewType, PB_ID )
SELECT vwd.ViewType,
      (SELECT PB_ID FROM dbo.CIC_Publication WHERE PubCode=N.value('.[1]', 'varchar(20)'))
FROM @xmlData.nodes('//View/AutoAddPub/PubCode') AS T(N)
	INNER JOIN dbo.CIC_View_Description vwd
		ON vwd.LangID=(SELECT TOP 1 LangID FROM	dbo.CIC_View_Description WHERE ViewType=vwd.ViewType ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND vwd.ViewName=N.value('../../Descriptions[1]/Lang[LangID=0][1]/ViewName[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM dbo.CIC_View vw WHERE vw.MemberID=@MemberID AND vw.ViewType=vwd.ViewType)
	WHERE NOT EXISTS(SELECT * FROM dbo.CIC_View_AutoAddPub WHERE ViewType=vwd.ViewType AND PB_ID=(SELECT PB_ID FROM dbo.CIC_Publication WHERE PubCode=N.value('.[1]', 'varchar(20)')))

INSERT INTO dbo.CIC_View_QuickListPub
        ( ViewType, PB_ID )
SELECT vwd.ViewType,
	(SELECT PB_ID FROM dbo.CIC_Publication WHERE PubCode=N.value('.[1]', 'varchar(20)'))
FROM @xmlData.nodes('//View/QuickListPub/PubCode') AS T(N)
	INNER JOIN dbo.CIC_View_Description vwd
		ON vwd.LangID=(SELECT TOP 1 LangID FROM	dbo.CIC_View_Description WHERE ViewType=vwd.ViewType ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND vwd.ViewName=N.value('../../Descriptions[1]/Lang[LangID=0][1]/ViewName[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM dbo.CIC_View vw WHERE vw.MemberID=@MemberID AND vw.ViewType=vwd.ViewType)
	WHERE NOT EXISTS(SELECT * FROM dbo.CIC_View_QuickListPub WHERE ViewType=vwd.ViewType AND PB_ID=(SELECT PB_ID FROM dbo.CIC_Publication WHERE PubCode=N.value('.[1]', 'varchar(20)')))

INSERT INTO dbo.CIC_View_Community
        ( ViewType, CM_ID, DisplayOrder )
SELECT vwd.ViewType,
      cm.CM_ID,
      N.value('DisplayOrder[1]', 'tinyint')
FROM @xmlData.nodes('//View/Communities/Community') AS T(N)
	LEFT JOIN dbo.GBL_Community cm
		ON cm.CM_GUID=N.value('CM_GUID[1]', 'uniqueidentifier')
			AND EXISTS(SELECT * FROM dbo.GBL_Community_Name cmn WHERE cmn.CM_ID=cm.CM_ID AND Name=N.value('Name[1]', 'nvarchar(255)'))
	INNER JOIN dbo.CIC_View_Description vwd
		ON vwd.LangID=(SELECT TOP 1 LangID FROM	dbo.CIC_View_Description WHERE ViewType=vwd.ViewType ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND vwd.ViewName=N.value('../../Descriptions[1]/Lang[LangID=0][1]/ViewName[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM dbo.CIC_View vw WHERE vw.MemberID=@MemberID AND vw.ViewType=vwd.ViewType)
	WHERE NOT EXISTS(SELECT * FROM dbo.CIC_View_Community WHERE ViewType=vwd.ViewType AND CM_ID=cm.CM_ID)

INSERT INTO dbo.CIC_View_Recurse
        ( ViewType, CanSee )
SELECT vwd.ViewType,
	vwd2.Viewtype
FROM @xmlData.nodes('//View/Recurse/CanSeeView') AS T(N)
	INNER JOIN dbo.CIC_View_Description vwd
		ON vwd.LangID=(SELECT TOP 1 LangID FROM	dbo.CIC_View_Description WHERE ViewType=vwd.ViewType ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND vwd.ViewName=N.value('../../Descriptions[1]/Lang[LangID=0][1]/ViewName[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM dbo.CIC_View vw WHERE vw.MemberID=@MemberID AND vw.ViewType=vwd.ViewType)
	INNER JOIN dbo.CIC_View_Description vwd2
		ON vwd2.LangID=(SELECT TOP 1 LangID FROM dbo.CIC_View_Description WHERE ViewType=vwd2.ViewType ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND vwd2.ViewName=N.value('.[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM dbo.CIC_View vw2 WHERE vw2.MemberID=@MemberID AND vw2.ViewType=vwd2.ViewType)
	WHERE NOT EXISTS(SELECT * FROM dbo.CIC_View_Recurse WHERE ViewType=vwd.ViewType AND CanSee=vwd2.ViewType)

-- Member 2

IF 0=1 BEGIN

SET @ObjectType='Member'

SELECT @xmlData=Data FROM cioc_data_loader.dbo.MultiObjectLoader
WHERE ObjectType=@ObjectType AND LoadCode=@LoadCode

UPDATE mem SET
	mem.DefaultTemplate = (SELECT TOP 1 t.Template_ID FROM dbo.GBL_Template t INNER JOIN dbo.GBL_Template_Description td ON td.Template_ID = t.Template_ID AND (t.MemberID=@MemberID OR t.MemberID IS NULL) WHERE td.Name=N.value('DefaultTemplateName[1]', 'nvarchar(255)')),
	mem.DefaultPrintTemplate = (SELECT TOP 1 t.Template_ID FROM dbo.GBL_Template t INNER JOIN dbo.GBL_Template_Description td ON td.Template_ID = t.Template_ID AND (t.MemberID=@MemberID OR t.MemberID IS NULL) WHERE td.Name=N.value('DefaultPrintTemplateName[1]', 'nvarchar(255)')),
	mem.DefaultViewCIC = (SELECT TOP 1 vw.ViewType FROM dbo.CIC_View vw INNER JOIN dbo.CIC_View_Description vwd ON vwd.ViewType = vw.ViewType AND (vw.MemberID=@MemberID OR vw.MemberID IS NULL) WHERE vwd.ViewName=N.value('DefaultViewCICName[1]', 'nvarchar(255)'))--,
	--mem.DefaultViewVOL = (SELECT TOP 1 vw.ViewType FROM dbo.CIC_View vw INNER JOIN dbo.CIC_View_Description vwd ON vwd.ViewType = vw.ViewType AND (vw.MemberID=@MemberID OR vw.MemberID IS NULL) WHERE vwd.ViewName=N.value('DefaultViewVOLName[1]', 'nvarchar(255)')),
FROM dbo.STP_Member mem
	INNER JOIN @xmlData.nodes('//Member') as T(N)
		ON mem.MemberID=N.value('MemberID[1]', 'int')

END

<<<<<<< HEAD
SET @ObjectType='CIC View'
=======
-- CIC User Type

IF 0=1 BEGIN

SET @ObjectType='CIC User Type'
>>>>>>> 17a838b99d3da6fdcca645aacf1a8f3f6f2ce2a5

SELECT @xmlData=Data FROM cioc_data_loader.dbo.MultiObjectLoader
WHERE ObjectType=@ObjectType AND LoadCode=@LoadCode

<<<<<<< HEAD
DECLARE @OldIDs TABLE (
	Old int,
	New int
)

MERGE INTO CIC_View_DisplayFieldGroup dst
USING (
SELECT 
	vwd.ViewType,
	N.value('DisplayOrder[1]', 'tinyint') AS DisplayOrder,
	N.value('DisplayFieldGroupID[1]', 'int') AS DisplayFieldGroupID
FROM @xmlData.nodes('//View/DisplayFieldGroup/FieldGroup') AS T(N)
	INNER JOIN dbo.CIC_View_Description vwd
		ON vwd.LangID=(SELECT TOP 1 LangID FROM	dbo.CIC_View_Description WHERE ViewType=vwd.ViewType ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND vwd.ViewName=N.value('../../Descriptions[1]/Lang[LangID=0][1]/ViewName[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM dbo.CIC_View vw WHERE vw.MemberID=@MemberID AND vw.ViewType=vwd.ViewType)
			) src 
ON 1=0
	WHEN NOT MATCHED BY TARGET THEN
		INSERT (ViewType, DisplayOrder)
			VALUES (src.ViewType, src.DisplayOrder)
		OUTPUT src.DisplayFieldGroupID, inserted.DisplayFieldGroupID INTO @OldIDs
		;
			/*
INSERT INTO @OldIDs (Old, New)
SELECT
	N.value('DisplayFieldGroupID[1]', 'int'),
	fgn.DisplayFieldGroupID
FROM @xmlData.nodes('//View/DisplayFieldGroup/FieldGroup') AS T(N)
	INNER JOIN dbo.CIC_View_Description vwd
		ON vwd.LangID=(SELECT TOP 1 LangID FROM	dbo.CIC_View_Description WHERE ViewType=vwd.ViewType ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND vwd.ViewName=N.value('../../Descriptions[1]/Lang[LangID=0][1]/ViewName[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM dbo.CIC_View vw WHERE vw.MemberID=@MemberID AND vw.ViewType=vwd.ViewType)
	INNER JOIN dbo.CIC_View_DisplayFieldGroup_Name fgn
		ON fgn.LangID=(SELECT TOP 1 LangID FROM	dbo.CIC_View_DisplayFieldGroup_Name WHERE DisplayFieldGroupID=fgn.DisplayFieldGroupID ORDER BY CASE WHEN LangID=0 THEN 0 ELSE 1 END, LangID)
			AND fgn.Name=N.value('Descriptions[1]/Lang[LangID=0][1]/Name[1]', 'nvarchar(255)')
			AND EXISTS(SELECT * FROM CIC_View_DisplayFieldGroup fg INNER JOIN CIC_View vw ON fg.ViewType=vw.ViewType WHERE vw.MemberID=@MemberID AND fg.DisplayFieldGroupID=fgn.DisplayFieldGroupID)
			
SELECT * FROM @OldIDs
*/
			
INSERT INTO CIC_View_DisplayFieldGroup_Name ( DisplayFieldGroupID, LangID, Name )
SELECT New, LangID, Name FROM (
	SELECT 
		N.value('Name[1]', 'nvarchar(100)') AS Name,
		N.value('LangID[1]', 'smallint') AS LangID,
		N.value('../../DisplayFieldGroupID[1]', 'int') AS DisplayFieldGroupID
	FROM @xmlData.nodes('//View/DisplayFieldGroup/FieldGroup/Descriptions/Lang') AS T(N)
) src
INNER JOIN @OldIDs ids
	ON Old=src.DisplayFieldGroupID


INSERT INTO CIC_View_DisplayField ( DisplayFieldGroupID, FieldID )
SELECT  DISTINCT New, FieldID FROM (
	SELECT 
		N.value('.', 'nvarchar(100)') AS FieldName,
		N.value('../../DisplayFieldGroupID[1]', 'int') AS DisplayFieldGroupID
	FROM @xmlData.nodes('//View/DisplayFieldGroup/FieldGroup/DisplayField/FieldName') AS T(N)
) src
INNER JOIN @OldIDs ids
	ON Old=src.DisplayFieldGroupID
INNER JOIN GBL_FieldOption fo
	ON src.FieldName=fo.FieldName
	
INSERT INTO CIC_View_FeedbackField ( DisplayFieldGroupID, FieldID )
SELECT  DISTINCT New, FieldID FROM (
	SELECT 
		N.value('.', 'nvarchar(100)') AS FieldName,
		N.value('../../DisplayFieldGroupID[1]', 'int') AS DisplayFieldGroupID
	FROM @xmlData.nodes('//View/DisplayFieldGroup/FieldGroup/FeedbackField/FieldName') AS T(N)
) src
INNER JOIN @OldIDs ids
	ON Old=src.DisplayFieldGroupID
INNER JOIN GBL_FieldOption fo
	ON src.FieldName=fo.FieldName
	
INSERT INTO CIC_View_MailFormField ( DisplayFieldGroupID, FieldID )
SELECT  DISTINCT New, FieldID FROM (
	SELECT 
		N.value('.', 'nvarchar(100)') AS FieldName,
		N.value('../../DisplayFieldGroupID[1]', 'int') AS DisplayFieldGroupID
	FROM @xmlData.nodes('//View/DisplayFieldGroup/FieldGroup/MailFormField/FieldName') AS T(N)
) src
INNER JOIN @OldIDs ids
	ON Old=src.DisplayFieldGroupID
INNER JOIN GBL_FieldOption fo
	ON src.FieldName=fo.FieldName
	
INSERT INTO CIC_View_UpdateField ( DisplayFieldGroupID, FieldID )
SELECT DISTINCT New, FieldID FROM (
	SELECT 
		N.value('.', 'nvarchar(100)') AS FieldName,
		N.value('../../DisplayFieldGroupID[1]', 'int') AS DisplayFieldGroupID
	FROM @xmlData.nodes('//View/DisplayFieldGroup/FieldGroup/UpdateField/FieldName') AS T(N)
) src
INNER JOIN @OldIDs ids
	ON Old=src.DisplayFieldGroupID
INNER JOIN GBL_FieldOption fo
	ON src.FieldName=fo.FieldName
=======
DECLARE @SLID int, @SecurityLevel nvarchar(255), @NewSLID int

DECLARE UserTypeCursor CURSOR LOCAL FOR
SELECT
	N.value('SL_ID[1]', 'int'),
	N.value('Descriptions[1]/Lang[LangID=0][1]/SecurityLevel[1]', 'nvarchar(255)')
FROM @xmlData.nodes('//UserType') as T(N)

OPEN UserTypeCursor

FETCH NEXT FROM UserTypeCursor INTO @SLID, @SecurityLevel

WHILE @@FETCH_STATUS = 0 BEGIN

PRINT @SecurityLevel

INSERT INTO dbo.CIC_SecurityLevel
        ( CREATED_DATE ,
          CREATED_BY ,
          MODIFIED_DATE ,
          MODIFIED_BY ,
          MemberID ,
          Owner ,
          ViewType ,
          ViewTypeOffline ,
          CanAddRecord ,
          CanAddSQL ,
          CanAssignFeedback ,
          CanCopyRecord ,
          CanDeleteRecord ,
          CanDoBulkOps ,
          CanDoFullUpdate ,
          CanEditRecord ,
          EditByViewList ,
          CanIndexTaxonomy ,
          CanManageUsers ,
          CanRequestUpdate ,
          CanUpdatePubs ,
          CanViewStats ,
          ExportPermission ,
          ImportPermission ,
          SuppressNotifyEmail ,
          FeedbackAlert ,
          CommentAlert ,
          WebDeveloper ,
          SuperUser ,
          SuperUserGlobal
        )
SELECT
		N.value('CREATED_DATE[1]', 'smalldatetime'),
		N.value('CREATED_BY[1]', 'varchar(50)'),
		N.value('MODIFIED_DATE[1]', 'smalldatetime'),
		N.value('MODIFIED_BY[1]', 'varchar(50)'),
 		N.value('MemberID[1]', 'int'),
		N.value('Owner[1]', 'char(3)'),
 		(SELECT TOP 1 vw.ViewType FROM dbo.CIC_View vw INNER JOIN dbo.CIC_View_Description vwd ON vwd.ViewType = vw.ViewType AND (vw.MemberID=@MemberID OR vw.MemberID IS NULL) WHERE vwd.ViewName=N.value('ViewTypeName[1]', 'nvarchar(500)')),
 		(SELECT TOP 1 vw.ViewType FROM dbo.CIC_View vw INNER JOIN dbo.CIC_View_Description vwd ON vwd.ViewType = vw.ViewType AND (vw.MemberID=@MemberID OR vw.MemberID IS NULL) WHERE vwd.ViewName=N.value('ViewTypeOfflineName[1]', 'nvarchar(500)')),
		N.value('CanAddRecord[1]', 'bit'),
		N.value('CanAddSQL[1]', 'bit'),
		N.value('CanAssignFeedback[1]', 'bit'),
		N.value('CanCopyRecord[1]', 'bit'),
		N.value('CanDeleteRecord[1]', 'bit'),
		N.value('CanDoBulkOps[1]', 'bit'),
		N.value('CanDoFullUpdate[1]', 'bit'),
 		N.value('CanEditRecord[1]', 'tinyint'),
		N.value('EditByViewList[1]', 'bit'),
 		N.value('CanIndexTaxonomy[1]', 'tinyint'),
		N.value('CanManageUsers[1]', 'bit'),
		N.value('CanRequestUpdate[1]', 'bit'),
 		N.value('CanUpdatePubs[1]', 'tinyint'),
		N.value('CanViewStats[1]', 'bit'),
 		N.value('ExportPermission[1]', 'int'),
		N.value('ImportPermission[1]', 'bit'),
		N.value('SuppressNotifyEmail[1]', 'bit'),
		N.value('FeedbackAlert[1]', 'bit'),
		N.value('CommentAlert[1]', 'bit'),
		N.value('WebDeveloper[1]', 'bit'),
		N.value('SuperUser[1]', 'bit'),
        N.value('SuperUserGlobal[1]', 'bit')
FROM @xmlData.nodes('//UserType') as T(N)
	WHERE N.value('SL_ID[1]', 'int')=@SLID
		AND NOT EXISTS(SELECT * FROM dbo.CIC_SecurityLevel sl INNER JOIN dbo.CIC_SecurityLevel_Name sln ON sln.SL_ID = sl.SL_ID AND sl.MemberID=@MemberID AND sln.SecurityLevel=@SecurityLevel)

	IF @@ROWCOUNT > 0 BEGIN
		SET @NewSLID=SCOPE_IDENTITY()
	END ELSE BEGIN 
		SELECT @NewSLID=NULL
	END
	
	IF @NewSLID IS NOT NULL BEGIN
		INSERT INTO dbo.CIC_SecurityLevel_Name
		        ( SL_ID ,
		          LangID ,
		          MemberID_Cache ,
		          SecurityLevel
		        )
		SELECT
			@NewSLID,
		    N.value('LangID[1]', 'smallint'),
		    N.value('MemberID_Cache[1]', 'int'),
		    N.value('SecurityLevel[1]', 'nvarchar(100)')
		FROM @xmlData.nodes('//UserType/Descriptions/Lang') AS T(N)
			WHERE N.value('../../SL_ID[1]', 'int')=@SLID
				AND NOT EXISTS(SELECT * FROM dbo.CIC_SecurityLevel_Name WHERE SL_ID=@NewSLID AND LangID=N.value('LangID[1]', 'smallint'))
	END

	FETCH NEXT FROM UserTypeCursor INTO @SLID, @SecurityLevel
END

DEALLOCATE UserTypeCursor

END

-- Users

SET @ObjectType='User'

SELECT @xmlData=Data FROM cioc_data_loader.dbo.MultiObjectLoader
WHERE ObjectType=@ObjectType AND LoadCode=@LoadCode

INSERT INTO dbo.GBL_Users
        ( CREATED_DATE ,
          CREATED_BY ,
          MODIFIED_DATE ,
          MODIFIED_BY ,
          MemberID_Cache ,
          UserUID ,
          UserName ,
          TechAdmin ,
          SL_ID_CIC ,
          SL_ID_VOL ,
          StartModule ,
          StartLanguage ,
          Agency ,
          FirstName ,
          LastName ,
          Initials ,
          Email ,
          PasswordHashRepeat ,
          PasswordHashSalt ,
          PasswordHash ,
          SavedSearchQuota ,
          SingleLogin ,
          SingleLoginKey ,
          CanUpdateAccount ,
          CanUpdatePassword ,
          Inactive ,
          ActiveStatusChanged ,
          ActiveStatusChangedBy ,
          PasswordChanged ,
          PasswordChangedBy ,
          LastSuccessfulLogin ,
          LastSuccessfulLoginIP ,
          LoginAttempts ,
          LastLoginAttempt ,
          LastLoginAttemptIP
        )
SELECT
		N.value('CREATED_DATE[1]', 'smalldatetime'),
		N.value('CREATED_BY[1]', 'varchar(50)'),
		N.value('MODIFIED_DATE[1]', 'smalldatetime'),
		N.value('MODIFIED_BY[1]', 'varchar(50)'),
 		N.value('MemberID_Cache[1]', 'int'),
		N.value('UserUID[1]', 'uniqueidentifier'),
		N.value('UserName[1]', 'varchar(50)'),
		N.value('TechAdmin[1]', 'bit'),
 		(SELECT TOP 1 sl.SL_ID FROM dbo.CIC_SecurityLevel sl INNER JOIN dbo.CIC_SecurityLevel_Name sln ON sln.SL_ID = sl.SL_ID AND (sl.MemberID=@MemberID OR sl.MemberID IS NULL) WHERE sln.SecurityLevel=N.value('SecurityLevelCIC[1]', 'nvarchar(255)')),
 		(SELECT TOP 1 sl.SL_ID FROM dbo.VOL_SecurityLevel sl INNER JOIN dbo.VOL_SecurityLevel_Name sln ON sln.SL_ID = sl.SL_ID AND (sl.MemberID=@MemberID OR sl.MemberID IS NULL) WHERE sln.SecurityLevel=N.value('SecurityLevelVOL[1]', 'nvarchar(255)')),
 		N.value('StartModule[1]', 'tinyint'),
 		N.value('StartLanguage[1]', 'smallint'),
		N.value('Agency[1]', 'char(3)'),
		N.value('FirstName[1]', 'varchar(50)'),
		N.value('LastName[1]', 'varchar(50)'),
		N.value('Initials[1]', 'varchar(6)'),
		N.value('Email[1]', 'varchar(60)'),
 		N.value('PasswordHashRepeat[1]', 'int'),
		N.value('PasswordHashSalt[1]', 'char(44)'),
		N.value('PasswordHash[1]', 'char(44)'),
 		N.value('SavedSearchQuota[1]', 'tinyint'),
		N.value('SingleLogin[1]', 'bit'),
		N.value('SingleLoginKey[1]', 'char(44)'),
		N.value('CanUpdateAccount[1]', 'bit'),
		N.value('CanUpdatePassword[1]', 'bit'),
		N.value('Inactive[1]', 'bit'),
		N.value('ActiveStatusChanged[1]', 'smalldatetime'),
		N.value('ActiveStatusChangedBy[1]', 'varchar(50)'),
		N.value('PasswordChanged[1]', 'smalldatetime'),
		N.value('PasswordChangedBy[1]', 'varchar(50)'),
        N.value('LastSuccessfulLogin[1]', 'datetime'),
		N.value('LastSuccessfulLoginIP[1]', 'varchar(20)'),
 		N.value('LoginAttempts[1]', 'tinyint'),
        N.value('LastLoginAttempt[1]', 'datetime'),
        N.value('LastLoginAttemptIP[1]', 'varchar(20)')
FROM @xmlData.nodes('//User') as T(N)
	WHERE NOT EXISTS(SELECT * FROM dbo.GBL_Users WHERE UserUID=N.value('UserUID[1]', 'uniqueidentifier') OR (UserName=N.value('UserName[1]', 'varchar(50)') AND MemberID_Cache=@MemberID))
>>>>>>> 17a838b99d3da6fdcca645aacf1a8f3f6f2ce2a5
