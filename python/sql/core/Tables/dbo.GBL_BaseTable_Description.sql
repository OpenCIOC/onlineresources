CREATE TABLE [dbo].[GBL_BaseTable_Description]
(
[BTD_ID] [int] NOT NULL IDENTITY(1, 1),
[NUM] [varchar] (8) COLLATE Latin1_General_100_CI_AI NOT NULL,
[LangID] [smallint] NOT NULL,
[CREATED_DATE] [smalldatetime] NULL CONSTRAINT [DF_GBL_BaseTable_Description_CREATED] DEFAULT (getdate()),
[CREATED_BY] [varchar] (50) COLLATE Latin1_General_100_CI_AI NULL,
[MODIFIED_DATE] [smalldatetime] NULL CONSTRAINT [DF_GBL_BaseTable_Description_MODIFIED_DATE] DEFAULT (getdate()),
[MODIFIED_BY] [varchar] (50) COLLATE Latin1_General_100_CI_AI NULL,
[NON_PUBLIC] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_NON_PUBLIC] DEFAULT ((0)),
[COLLECTED_DATE] [smalldatetime] NULL,
[COLLECTED_BY] [varchar] (50) COLLATE Latin1_General_100_CI_AI NULL,
[UPDATE_DATE] [smalldatetime] NULL,
[UPDATED_BY] [varchar] (50) COLLATE Latin1_General_100_CI_AI NULL,
[UPDATE_SCHEDULE] [smalldatetime] NULL,
[UPDATE_HISTORY] [varchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[IMPORT_DATE] [smalldatetime] NULL,
[DELETION_DATE] [smalldatetime] NULL,
[DELETED_BY] [varchar] (50) COLLATE Latin1_General_100_CI_AI NULL,
[ORG_LEVEL_1] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[ORG_LEVEL_2] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[ORG_LEVEL_3] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[ORG_LEVEL_4] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[ORG_LEVEL_5] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[O2_PUBLISH] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_O2_PUBLISH] DEFAULT ((0)),
[O3_PUBLISH] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_O3_PUBLISH] DEFAULT ((0)),
[O4_PUBLISH] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_O4_PUBLISH] DEFAULT ((0)),
[O5_PUBLISH] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_O5_PUBLISH] DEFAULT ((0)),
[LEGAL_ORG] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[LO_PUBLISH] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_LO_PUBLISH] DEFAULT ((0)),
[LOCATION_NAME] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[SERVICE_NAME_LEVEL_1] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[SERVICE_NAME_LEVEL_2] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[S1_PUBLISH] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_S1_PUBLISH] DEFAULT ((0)),
[S2_PUBLISH] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_S2_PUBLISH] DEFAULT ((0)),
[SORT_AS] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[SORT_AS_USELETTER] [bit] NULL CONSTRAINT [DF_GBL_BaseTable_Description_SORT_AS_USELETTER] DEFAULT ((0)),
[ACCESSIBILITY_NOTES] [nvarchar] (4000) COLLATE Latin1_General_100_CI_AI NULL,
[ORG_DESCRIPTION] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[LOCATION_DESCRIPTION] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[DESCRIPTION] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[ESTABLISHED] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[E_MAIL] [varchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[FAX] [nvarchar] (1000) COLLATE Latin1_General_100_CI_AI NULL,
[GEOCODE_NOTES] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_CARE_OF] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_BOX_TYPE] [nvarchar] (20) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_PO_BOX] [nvarchar] (20) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_BUILDING] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_STREET_NUMBER] [nvarchar] (30) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_STREET] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_STREET_TYPE] [nvarchar] (20) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_STREET_TYPE_AFTER] [bit] NULL,
[MAIL_STREET_DIR] [varchar] (2) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_SUFFIX] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_CITY] [nvarchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_PROVINCE] [varchar] (2) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_COUNTRY] [nvarchar] (60) COLLATE Latin1_General_100_CI_AI NULL,
[OFFICE_PHONE] [nvarchar] (1000) COLLATE Latin1_General_100_CI_AI NULL,
[TOLL_FREE_PHONE] [nvarchar] (1000) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_BUILDING] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_STREET_NUMBER] [nvarchar] (30) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_STREET] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_STREET_TYPE] [nvarchar] (20) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_STREET_TYPE_AFTER] [bit] NULL,
[SITE_STREET_DIR] [varchar] (2) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_SUFFIX] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_CITY] [nvarchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_PROVINCE] [varchar] (2) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_COUNTRY] [nvarchar] (60) COLLATE Latin1_General_100_CI_AI NULL,
[WWW_ADDRESS] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_NAME] [nvarchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_TITLE] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_ORG] [nvarchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_PHONE] [nvarchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_FAX] [nvarchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_EMAIL] [varchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_BUILDING] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_ADDRESS] [nvarchar] (150) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_CITY] [nvarchar] (100) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_PROVINCE] [nvarchar] (2) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_POSTAL_CODE] [varchar] (20) COLLATE Latin1_General_100_CI_AI NULL,
[SOURCE_DB] [nvarchar] (1000) COLLATE Latin1_General_100_CI_AI NULL,
[SUBMIT_CHANGES_TO] [varchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_Accessibility] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_AltOrg] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_CrossRef] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_FormerOrg] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_LocatedIn] [nvarchar] (200) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_MailAddress] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_SiteAddress] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_SiteAddressWeb] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[SRCH_Org] [nvarchar] (max) COLLATE Latin1_General_100_CI_AI NULL,
[SRCH_Org_U] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_SRCH_Org_U] DEFAULT ((1)),
[SRCH_Anywhere] [nvarchar] (max) COLLATE Latin1_General_CI_AS NULL,
[SRCH_Anywhere_U] [bit] NOT NULL CONSTRAINT [DF_GBL_BaseTable_Description_SRCH_Anywhere_U] DEFAULT ((1)),
[SUBMIT_CHANGES_TO_PROTOCOL] [varchar] (8) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_DescriptionShort] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_OrgDescriptionShort] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[CMP_LocDescriptionShort] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[WWW_ADDRESS_PROTOCOL] [varchar] (8) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_LINE_1] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[MAIL_LINE_2] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_LINE_1] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL,
[SITE_LINE_2] [nvarchar] (255) COLLATE Latin1_General_100_CI_AI NULL
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[tr_GBL_BaseTable_Description_CMP] ON [dbo].[GBL_BaseTable_Description]
FOR INSERT, UPDATE AS

SET NOCOUNT ON

IF  UPDATE(ACCESSIBILITY_NOTES) BEGIN
	UPDATE btd
		SET	CMP_Accessibility = dbo.fn_GBL_NUMToAccessibility(btd.NUM,btd.ACCESSIBILITY_NOTES,btd.LangID)
	FROM GBL_BaseTable_Description btd
	INNER JOIN Inserted i
		ON i.BTD_ID = btd.BTD_ID
END

IF  UPDATE(ORG_LEVEL_2) OR UPDATE(O2_PUBLISH)
	OR UPDATE(ORG_LEVEL_3) OR UPDATE(O3_PUBLISH)
	OR UPDATE(ORG_LEVEL_4) OR UPDATE(O4_PUBLISH)
	OR UPDATE(ORG_LEVEL_5) OR UPDATE(O5_PUBLISH)
	OR UPDATE(LEGAL_ORG) OR UPDATE(LO_PUBLISH)
	OR UPDATE (SERVICE_NAME_LEVEL_1) OR UPDATE (S1_PUBLISH)
	OR UPDATE (SERVICE_NAME_LEVEL_2) OR UPDATE (S2_PUBLISH)
	BEGIN
	UPDATE btd
		SET	CMP_CrossRef = dbo.fn_GBL_NUMToCrossRef(btd.NUM,btd.LangID)
	FROM GBL_BaseTable_Description btd
	INNER JOIN Inserted i
		ON btd.BTD_ID=i.BTD_ID
END

IF	UPDATE(NUM)
	OR UPDATE(MAIL_LINE_1)
	OR UPDATE(MAIL_LINE_2)
	OR UPDATE(MAIL_CARE_OF)
	OR UPDATE(MAIL_BOX_TYPE)
	OR UPDATE(MAIL_PO_BOX)
	OR UPDATE(MAIL_BUILDING)
	OR UPDATE(MAIL_STREET_NUMBER)
	OR UPDATE(MAIL_STREET)
	OR UPDATE(MAIL_STREET_TYPE)
	OR UPDATE(MAIL_STREET_TYPE_AFTER)
	OR UPDATE(MAIL_STREET_DIR)
	OR UPDATE(MAIL_SUFFIX)
	OR UPDATE(MAIL_CITY)
	OR UPDATE(MAIL_PROVINCE)
	OR UPDATE(MAIL_COUNTRY) BEGIN
UPDATE btd
	SET CMP_MailAddress = dbo.fn_GBL_FullAddress(NULL,NULL,btd.MAIL_LINE_1,btd.MAIL_LINE_2,btd.MAIL_BUILDING,btd.MAIL_STREET_NUMBER,btd.MAIL_STREET,btd.MAIL_STREET_TYPE,btd.MAIL_STREET_TYPE_AFTER,btd.MAIL_STREET_DIR,btd.MAIL_SUFFIX,btd.MAIL_CITY,btd.MAIL_PROVINCE,btd.MAIL_COUNTRY,bt.MAIL_POSTAL_CODE,btd.MAIL_CARE_OF,btd.MAIL_BOX_TYPE,btd.MAIL_PO_BOX,NULL,NULL,btd.LangID,0)
	FROM GBL_BaseTable_Description btd
	INNER JOIN GBL_BaseTable bt
		ON btd.NUM=bt.NUM
	INNER JOIN Inserted i
		ON btd.BTD_ID=i.BTD_ID
END

IF	UPDATE(NUM)
	OR UPDATE(SITE_LINE_1)
	OR UPDATE(SITE_LINE_2)
	OR UPDATE(SITE_BUILDING)
	OR UPDATE(SITE_STREET_NUMBER)
	OR UPDATE(SITE_STREET)
	OR UPDATE(SITE_STREET_TYPE)
	OR UPDATE(SITE_STREET_TYPE_AFTER)
	OR UPDATE(SITE_STREET_DIR)
	OR UPDATE(SITE_SUFFIX)
	OR UPDATE(SITE_CITY)
	OR UPDATE(SITE_PROVINCE)
	OR UPDATE(SITE_COUNTRY) BEGIN
UPDATE btd
	SET CMP_SiteAddress = dbo.fn_GBL_FullAddress(bt.NUM,bt.RSN,btd.SITE_LINE_1,btd.SITE_LINE_2,btd.SITE_BUILDING,btd.SITE_STREET_NUMBER,btd.SITE_STREET,btd.SITE_STREET_TYPE,btd.SITE_STREET_TYPE_AFTER,btd.SITE_STREET_DIR,btd.SITE_SUFFIX,btd.SITE_CITY,btd.SITE_PROVINCE,btd.SITE_COUNTRY,bt.SITE_POSTAL_CODE,NULL,NULL,NULL,bt.LATITUDE,bt.LONGITUDE,btd.LangID,0),
		CMP_SiteAddressWeb = dbo.fn_GBL_FullAddress(bt.NUM,bt.RSN,btd.SITE_LINE_1,btd.SITE_LINE_2,btd.SITE_BUILDING,btd.SITE_STREET_NUMBER,btd.SITE_STREET,btd.SITE_STREET_TYPE,btd.SITE_STREET_TYPE_AFTER,btd.SITE_STREET_DIR,btd.SITE_SUFFIX,btd.SITE_CITY,btd.SITE_PROVINCE,btd.SITE_COUNTRY,bt.SITE_POSTAL_CODE,NULL,NULL,NULL,bt.LATITUDE,bt.LONGITUDE,btd.LangID,1)
	FROM GBL_BaseTable_Description btd
	INNER JOIN GBL_BaseTable bt
		ON btd.NUM=bt.NUM
	INNER JOIN Inserted i
		ON btd.BTD_ID=i.BTD_ID
END

IF UPDATE(NUM) BEGIN
	UPDATE btd
	SET CMP_LocatedIn = dbo.fn_GBL_DisplayCommunity(bt.LOCATED_IN_CM, btd.LangID)
	FROM GBL_BaseTable_Description btd
	INNER JOIN GBL_BaseTable bt
		ON btd.NUM=bt.NUM
	INNER JOIN Inserted i
		ON btd.NUM=i.NUM
END

IF UPDATE(DESCRIPTION) OR UPDATE(ORG_DESCRIPTION) OR UPDATE(LOCATION_DESCRIPTION) BEGIN
UPDATE btd
	SET CMP_DescriptionShort = CASE WHEN COALESCE(btd.DESCRIPTION,btd.ORG_DESCRIPTION,btd.LOCATION_DESCRIPTION) IS NULL THEN NULL ELSE LTRIM(LEFT(
			REPLACE(REPLACE(REPLACE(
					REPLACE(REPLACE(REPLACE(cioc_shared.dbo.RegexReplace(REPLACE(REPLACE(COALESCE(btd.DESCRIPTION, btd.ORG_DESCRIPTION, btd.LOCATION_DESCRIPTION), '<li>', ' * '),'<LI>', ' * '),'<[^>]+>',' '), CHAR(10), ' '), CHAR(9), ' '), CHAR(13), ' '),
				'  ', ' ' + CHAR(1)), CHAR(1) + ' ', ''), CHAR(1), '')
		,200)) + CASE WHEN LEN(COALESCE(btd.DESCRIPTION, btd.ORG_DESCRIPTION, btd.LOCATION_DESCRIPTION)) > 200 THEN ' ...' ELSE '' END END
	FROM GBL_BaseTable_Description btd
	INNER JOIN Inserted i
		ON btd.BTD_ID=i.BTD_ID
	LEFT JOIN Deleted d
		ON i.BTD_ID=d.BTD_ID
	WHERE COALESCE(i.DESCRIPTION,i.ORG_DESCRIPTION,i.LOCATION_DESCRIPTION, '') <> COALESCE(d.DESCRIPTION,d.ORG_DESCRIPTION,d.LOCATION_DESCRIPTION, '')
END
IF UPDATE(ORG_DESCRIPTION) BEGIN
UPDATE btd
	SET CMP_OrgDescriptionShort = CASE WHEN btd.ORG_DESCRIPTION IS NULL THEN NULL ELSE LTRIM(LEFT(
			REPLACE(REPLACE(REPLACE(
					REPLACE(REPLACE(REPLACE(cioc_shared.dbo.RegexReplace(REPLACE(REPLACE(btd.ORG_DESCRIPTION, '<li>', ' * '),'<LI>', ' * '),'<[^>]+>',' '), CHAR(10), ' '), CHAR(9), ' '), CHAR(13), ' '),
				'  ', ' ' + CHAR(1)), CHAR(1) + ' ', ''), CHAR(1), '')
		,200)) + CASE WHEN LEN(btd.ORG_DESCRIPTION) > 200 THEN ' ...' ELSE '' END END
	FROM GBL_BaseTable_Description btd
	INNER JOIN Inserted i
		ON btd.BTD_ID=i.BTD_ID
	LEFT JOIN Deleted d
		ON i.BTD_ID=d.BTD_ID
	WHERE ISNULL(i.ORG_DESCRIPTION,'') <> ISNULL(d.ORG_DESCRIPTION, '')
END
IF UPDATE(LOCATION_DESCRIPTION) BEGIN
UPDATE btd
	SET CMP_LocDescriptionShort = CASE WHEN btd.LOCATION_DESCRIPTION IS NULL THEN NULL ELSE LTRIM(LEFT(
			REPLACE(REPLACE(REPLACE(
					REPLACE(REPLACE(REPLACE(cioc_shared.dbo.RegexReplace(REPLACE(REPLACE(btd.LOCATION_DESCRIPTION, '<li>', ' * '),'<LI>', ' * '),'<[^>]+>',' '), CHAR(10), ' '), CHAR(9), ' '), CHAR(13), ' '),
				'  ', ' ' + CHAR(1)), CHAR(1) + ' ', ''), CHAR(1), '')
		,200)) + CASE WHEN LEN(btd.LOCATION_DESCRIPTION) > 200 THEN ' ...' ELSE '' END END
	FROM GBL_BaseTable_Description btd
	INNER JOIN Inserted i
		ON btd.BTD_ID=i.BTD_ID
	LEFT JOIN Deleted d
		ON i.BTD_ID=d.BTD_ID
	WHERE ISNULL(i.LOCATION_DESCRIPTION,'') <> ISNULL(d.LOCATION_DESCRIPTION, '')
END
SET NOCOUNT OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[tr_GBL_BaseTable_Description_d] ON [dbo].[GBL_BaseTable_Description]
FOR DELETE AS

SET NOCOUNT ON

/*
	Checked for Release: 3.6
	Checked by: CL
	Checked on: 27-Sep-2014
	Action: TESTING REQUIRED
*/

IF EXISTS(SELECT * FROM GBL_BaseTable bt
		INNER JOIN Deleted d
			ON bt.NUM=d.NUM
		WHERE NOT EXISTS(SELECT * FROM GBL_BaseTable_Description btd WHERE btd.NUM=bt.NUM)
			AND NOT EXISTS(SELECT * FROM VOL_Opportunity vo WHERE vo.NUM=bt.NUM)
			AND NOT EXISTS(SELECT * FROM VOL_Member vm WHERE vm.NUM=bt.NUM)
			AND NOT EXISTS(SELECT * FROM GBL_Agency a WHERE a.AgencyNUMCIC=bt.NUM OR a.AgencyNUMVOL=bt.NUM)) BEGIN
	DELETE bt
		FROM GBL_BaseTable bt
		INNER JOIN Deleted d
			ON bt.NUM=d.NUM
		WHERE NOT EXISTS(SELECT * FROM GBL_BaseTable_Description btd WHERE btd.NUM=bt.NUM)
			AND NOT EXISTS(SELECT * FROM VOL_Opportunity vo WHERE vo.NUM=bt.NUM)
			AND NOT EXISTS(SELECT * FROM VOL_Member vm WHERE vm.NUM=bt.NUM)
			AND NOT EXISTS(SELECT * FROM GBL_Agency a WHERE a.AgencyNUMCIC=bt.NUM OR a.AgencyNUMVOL=bt.NUM)
END

DELETE cbtd
	FROM CIC_BaseTable_Description cbtd
	INNER JOIN Deleted d
		ON cbtd.NUM=d.NUM AND cbtd.LangID=d.LangID

DELETE ccbtd
	FROM CCR_BaseTable_Description ccbtd
	INNER JOIN Deleted d
		ON ccbtd.NUM=d.NUM AND ccbtd.LangID=d.LangID

DELETE pr
	FROM GBL_BT_AC_Notes prn
	INNER JOIN GBL_BT_AC pr
		ON prn.BT_AC_ID=pr.BT_AC_ID
	INNER JOIN Deleted d
		ON pr.NUM=d.NUM AND prn.LangID=d.LangID

INSERT INTO GBL_BaseTable_Description (
		NUM,
		LangID,
		CREATED_DATE,
		CREATED_BY,
		MODIFIED_DATE,
		MODIFIED_BY,
		DELETION_DATE,
		NON_PUBLIC,
		ORG_LEVEL_1,
		ORG_LEVEL_2,
		ORG_LEVEL_3,
		ORG_LEVEL_4,
		ORG_LEVEL_5,
		LOCATION_NAME,
		SERVICE_NAME_LEVEL_1,
		SERVICE_NAME_LEVEL_2
	)
	SELECT bt.NUM,
		d.LangID,
		d.CREATED_DATE,
		d.CREATED_BY,
		d.MODIFIED_DATE,
		d.MODIFIED_BY,
		d.DELETION_DATE,
		d.NON_PUBLIC,
		d.ORG_LEVEL_1,
		d.ORG_LEVEL_2,
		d.ORG_LEVEL_3,
		d.ORG_LEVEL_4,
		d.ORG_LEVEL_5,
		LOCATION_NAME,
		SERVICE_NAME_LEVEL_1,
		SERVICE_NAME_LEVEL_2
	FROM Deleted d
	INNER JOIN GBL_BaseTable bt
		ON d.NUM=bt.NUM
	WHERE NOT EXISTS(SELECT * FROM GBL_BaseTable_Description btd WHERE btd.NUM=d.NUM)
		AND (
			EXISTS(SELECT * FROM VOL_Opportunity vo WHERE vo.NUM=d.NUM)
			OR EXISTS(SELECT * FROM VOL_Member vm WHERE vm.NUM=d.NUM)
			OR EXISTS(SELECT * FROM GBL_Agency a WHERE a.AgencyNUMCIC=d.NUM OR a.AgencyNUMVOL=d.NUM)
		)
	
SET NOCOUNT OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[tr_GBL_BaseTable_Description_iu] ON [dbo].[GBL_BaseTable_Description]
FOR INSERT, UPDATE AS

SET NOCOUNT ON

/*
	Checked for Release: 3.5.2
	Checked by: KL
	Checked on: 10-Oct-2013
	Action:	NO ACTION REQUIRED
*/

IF UPDATE(ORG_LEVEL_1)
	OR UPDATE(ORG_LEVEL_2)
	OR UPDATE(ORG_LEVEL_3)
	OR UPDATE(ORG_LEVEL_4)
	OR UPDATE(ORG_LEVEL_5) BEGIN

	IF EXISTS(SELECT * FROM Inserted i INNER JOIN GBL_BaseTable bt ON bt.ORG_NUM=i.NUM AND bt.DISPLAY_ORG_NAME=1) BEGIN
		UPDATE btd
			SET	ORG_LEVEL_1=obtd.ORG_LEVEL_1,
				ORG_LEVEL_2=obtd.ORG_LEVEL_2, O2_PUBLISH=0,
				ORG_LEVEL_3=obtd.ORG_LEVEL_3, O3_PUBLISH=0,
				ORG_LEVEL_4=obtd.ORG_LEVEL_4, O4_PUBLISH=0,
				ORG_LEVEL_5=obtd.ORG_LEVEL_5, O5_PUBLISH=0
		FROM GBL_BaseTable_Description btd
		INNER JOIN GBL_BaseTable bt
			ON btd.NUM=bt.NUM AND bt.DISPLAY_ORG_NAME=1
		INNER JOIN GBL_BaseTable_Description obtd
			ON bt.ORG_NUM=obtd.NUM AND obtd.LangID=(SELECT TOP 1 LangID FROM GBL_BaseTable_Description WHERE NUM=obtd.NUM ORDER BY CASE WHEN LangID=btd.LangID THEN 0 ELSE 1 END, LangID)
		INNER JOIN Inserted i
			ON obtd.NUM=i.NUM
	END
END

IF UPDATE(LOCATION_NAME) BEGIN
	IF EXISTS(SELECT *
		FROM Inserted i INNER JOIN GBL_BT_OLS pr ON i.NUM=pr.NUM
		INNER JOIN GBL_OrgLocationService ols ON pr.OLS_ID=ols.OLS_ID AND ols.Code='SITE'
		INNER JOIN dbo.GBL_BT_LOCATION_SERVICE prls ON prls.LOCATION_NUM=i.NUM) BEGIN
		;
		WITH LocationName (NUM,LangID,LOCATION_NAME) AS (
			SELECT btd.NUM, btd.LangID, CASE
				WHEN EXISTS(SELECT * FROM GBL_BT_OLS pr INNER JOIN GBL_OrgLocationService ols ON pr.OLS_ID=ols.OLS_ID AND ols.Code='SITE' WHERE pr.NUM=btd.NUM)
					THEN btd.LOCATION_NAME
				WHEN (SELECT COUNT(*) FROM GBL_BT_LOCATION_SERVICE WHERE SERVICE_NUM=btd.NUM)=1
					THEN (SELECT TOP 1 LOCATION_NAME FROM GBL_BaseTable_Description lbtd INNER JOIN GBL_BT_LOCATION_SERVICE ls ON ls.LOCATION_NUM=lbtd.NUM AND ls.SERVICE_NUM=btd.NUM ORDER BY CASE WHEN LangID=btd.LangID THEN 0 ELSE 1 END, LangID)
				ELSE
					NULL
				END AS LOCATION_NAME_X
			FROM GBL_BaseTable_Description btd
			INNER JOIN GBL_BT_LOCATION_SERVICE ls
				ON btd.NUM=ls.SERVICE_NUM
			INNER JOIN Inserted i
				ON i.NUM=ls.LOCATION_NUM
		)
		UPDATE btd
			SET LOCATION_NAME = ln.LOCATION_NAME
		FROM GBL_BaseTable_Description btd
		INNER JOIN LocationName ln
			ON btd.NUM=ln.NUM AND btd.LangID=ln.LangID
		WHERE (ln.LOCATION_NAME IS NULL AND btd.LOCATION_NAME IS NOT NULL)
			OR (ln.LOCATION_NAME IS NOT NULL AND btd.LOCATION_NAME IS NULL)
			OR (ln.LOCATION_NAME <> btd.LOCATION_NAME)
	END
END

SET NOCOUNT OFF
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE TRIGGER [dbo].[tr_GBL_BaseTable_Description_SRCH] ON [dbo].[GBL_BaseTable_Description] 
FOR INSERT, UPDATE AS

SET NOCOUNT ON

/*
	Checked for Release: 3.5.2
	Checked by: KL
	Checked on: 03-Oct-2013
	Action:	NO ACTION REQUIRED
*/

/* Update Name Index */
IF UPDATE(ORG_LEVEL_1)
	OR UPDATE(ORG_LEVEL_2)
	OR UPDATE(ORG_LEVEL_3)
	OR UPDATE(ORG_LEVEL_4)
	OR UPDATE(ORG_LEVEL_5)
	OR UPDATE(LOCATION_NAME)
	OR UPDATE(SERVICE_NAME_LEVEL_1)
	OR UPDATE(SERVICE_NAME_LEVEL_2)
	OR UPDATE(LEGAL_ORG)
	OR UPDATE(CMP_AltOrg)
	OR UPDATE(CMP_FormerOrg)
BEGIN
	UPDATE btd
		SET SRCH_Org_U = 1
	FROM 	GBL_BaseTable_Description btd
	INNER JOIN Inserted i
		ON btd.BTD_ID=i.BTD_ID
	WHERE btd.SRCH_Org_U <> 1
END

/* Update "Anywhere" Index */
IF UPDATE(ORG_LEVEL_1)
	OR UPDATE(ORG_LEVEL_2)
	OR UPDATE(ORG_LEVEL_3)
	OR UPDATE(ORG_LEVEL_4)
	OR UPDATE(ORG_LEVEL_5)
	OR UPDATE(LOCATION_NAME)
	OR UPDATE(SERVICE_NAME_LEVEL_1)
	OR UPDATE(SERVICE_NAME_LEVEL_2)
	OR UPDATE(LEGAL_ORG)
	OR UPDATE(CMP_AltOrg)
	OR UPDATE(CMP_FormerOrg)
	OR UPDATE([DESCRIPTION])
	OR UPDATE(SITE_BUILDING)
	OR UPDATE(CMP_Accessibility)
BEGIN
	UPDATE btd
		SET SRCH_Anywhere_U = 1
	FROM GBL_BaseTable_Description btd
	INNER JOIN Inserted i
		ON btd.BTD_ID=i.BTD_ID
	WHERE btd.SRCH_Anywhere_U <> 1
END

/* Update VOL "Anywhere" Index */
IF UPDATE(SRCH_Org) BEGIN
	UPDATE vod
		SET	SRCH_Anywhere_U = 1
	FROM VOL_Opportunity_Description vod
	INNER JOIN VOL_Opportunity vo
		ON vod.VNUM=vo.VNUM
	INNER JOIN Inserted i
		ON i.NUM = vo.NUM AND i.LangID=(SELECT TOP 1 LangID FROM GBL_BaseTable_Description WHERE NUM=vo.NUM ORDER BY CASE WHEN LangID=vod.LangID THEN 0 ELSE 1 END, LangID)
	WHERE vod.SRCH_Anywhere_U <> 1
END

SET NOCOUNT OFF
GO
ALTER TABLE [dbo].[GBL_BaseTable_Description] ADD CONSTRAINT [PK_GBL_BaseTable_Description] PRIMARY KEY CLUSTERED ([BTD_ID]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_BTDIDinclNUMLangID] ON [dbo].[GBL_BaseTable_Description] ([BTD_ID]) INCLUDE ([LangID], [NUM]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_CREATEDDATEBTDIDNUMLangID] ON [dbo].[GBL_BaseTable_Description] ([CREATED_DATE], [BTD_ID], [NUM], [LangID]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_DELETIONDATE] ON [dbo].[GBL_BaseTable_Description] ([DELETION_DATE]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_DELETIONDATEBTDIDLangIDNUM] ON [dbo].[GBL_BaseTable_Description] ([DELETION_DATE], [BTD_ID], [LangID], [NUM]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_LangIDBTIDNUMinclDELETIONDATE] ON [dbo].[GBL_BaseTable_Description] ([LangID], [BTD_ID], [NUM]) INCLUDE ([DELETION_DATE]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_LangIDNUMinclDELETIONDATE] ON [dbo].[GBL_BaseTable_Description] ([LangID], [NUM]) INCLUDE ([DELETION_DATE]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_LangIDNUMinclNONPUBLICUPDATESCHEDULEDELETIONDATE] ON [dbo].[GBL_BaseTable_Description] ([LangID], [NUM]) INCLUDE ([NON_PUBLIC], [UPDATE_SCHEDULE], [DELETION_DATE]) WITH (FILLFACTOR=80) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_LangIDORGLEVEL1NUM] ON [dbo].[GBL_BaseTable_Description] ([LangID], [ORG_LEVEL_1], [NUM]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_NUMinclSERVICENAMELEVEL1] ON [dbo].[GBL_BaseTable_Description] ([NUM]) INCLUDE ([SERVICE_NAME_LEVEL_1]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_NUMinclSERVICENAMELEVEL2] ON [dbo].[GBL_BaseTable_Description] ([NUM]) INCLUDE ([SERVICE_NAME_LEVEL_2]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_ViewFields] ON [dbo].[GBL_BaseTable_Description] ([NUM]) INCLUDE ([UPDATE_SCHEDULE], [DELETION_DATE], [NON_PUBLIC]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_NUMDELETIONDATE] ON [dbo].[GBL_BaseTable_Description] ([NUM], [DELETION_DATE]) ON [PRIMARY]
GO
ALTER TABLE [dbo].[GBL_BaseTable_Description] ADD CONSTRAINT [IX_GBL_BaseTable_Description] UNIQUE NONCLUSTERED ([NUM], [LangID]) ON [PRIMARY]
GO
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING ON
GO
SET ANSI_WARNINGS ON
GO
SET CONCAT_NULL_YIELDS_NULL ON
GO
SET ARITHABORT ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_NUMLangIDinclLOCATION_NAME] ON [dbo].[GBL_BaseTable_Description] ([NUM], [LangID]) INCLUDE ([LOCATION_NAME]) WHERE ([LOCATION_NAME] IS NOT NULL) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_NUMLangIDinclSERVICENAMELEVEL12] ON [dbo].[GBL_BaseTable_Description] ([NUM], [LangID]) INCLUDE ([SERVICE_NAME_LEVEL_1], [SERVICE_NAME_LEVEL_2]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_NUMLangIDORGLEVEL1] ON [dbo].[GBL_BaseTable_Description] ([NUM], [LangID], [ORG_LEVEL_1]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_SERVICENAMELEVEL1] ON [dbo].[GBL_BaseTable_Description] ([SERVICE_NAME_LEVEL_1]) WITH (FILLFACTOR=80) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_GBL_BaseTable_Description_UPDATEDATEBTDIDNUMLangID] ON [dbo].[GBL_BaseTable_Description] ([UPDATE_DATE], [BTD_ID], [NUM], [LangID]) ON [PRIMARY]
GO
ALTER TABLE [dbo].[GBL_BaseTable_Description] ADD CONSTRAINT [FK_GBL_BaseTable_Description_GBL_BaseTable] FOREIGN KEY ([NUM]) REFERENCES [dbo].[GBL_BaseTable] ([NUM]) ON DELETE CASCADE ON UPDATE CASCADE
GO
ALTER TABLE [dbo].[GBL_BaseTable_Description] ADD CONSTRAINT [FK_GBL_BaseTable_Description_GBL_StreetDir_Mail] FOREIGN KEY ([MAIL_STREET_DIR]) REFERENCES [dbo].[GBL_StreetDir] ([Dir])
GO
ALTER TABLE [dbo].[GBL_BaseTable_Description] ADD CONSTRAINT [FK_GBL_BaseTable_Description_GBL_StreetDir_Site] FOREIGN KEY ([SITE_STREET_DIR]) REFERENCES [dbo].[GBL_StreetDir] ([Dir])
GO
ALTER TABLE [dbo].[GBL_BaseTable_Description] ADD CONSTRAINT [FK_GBL_BaseTable_Description_STP_Language] FOREIGN KEY ([LangID]) REFERENCES [dbo].[STP_Language] ([LangID])
GO
GRANT SELECT ON  [dbo].[GBL_BaseTable_Description] TO [cioc_cic_search_role]
GO
GRANT DELETE ON  [dbo].[GBL_BaseTable_Description] TO [cioc_login_role]
GO
GRANT INSERT ON  [dbo].[GBL_BaseTable_Description] TO [cioc_login_role]
GO
GRANT SELECT ON  [dbo].[GBL_BaseTable_Description] TO [cioc_login_role]
GO
GRANT UPDATE ON  [dbo].[GBL_BaseTable_Description] TO [cioc_login_role]
GO
GRANT SELECT ON  [dbo].[GBL_BaseTable_Description] TO [cioc_vol_search_role]
GO
CREATE FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] KEY INDEX [PK_GBL_BaseTable_Description] ON [GBLRecord]
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([ORG_LEVEL_1] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([ORG_LEVEL_2] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([ORG_LEVEL_3] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([ORG_LEVEL_4] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([ORG_LEVEL_5] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([LEGAL_ORG] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([LOCATION_NAME] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([SERVICE_NAME_LEVEL_1] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([SERVICE_NAME_LEVEL_2] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([SRCH_Org] LANGUAGE 0)
GO
ALTER FULLTEXT INDEX ON [dbo].[GBL_BaseTable_Description] ADD ([SRCH_Anywhere] LANGUAGE 0)
GO
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING ON
GO
SET ANSI_WARNINGS ON
GO
SET CONCAT_NULL_YIELDS_NULL ON
GO
SET ARITHABORT ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING ON
GO
SET ANSI_WARNINGS ON
GO
SET CONCAT_NULL_YIELDS_NULL ON
GO
SET ARITHABORT ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
